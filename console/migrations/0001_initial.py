# Generated by Django 5.0.6 on 2024-06-20 15:24

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('price', models.IntegerField()),
                ('trash', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Banner_image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('file', models.FileField(upload_to='assets/videos/Banner_video')),
            ],
        ),
        migrations.CreateModel(
            name='Banner_video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('file', models.FileField(upload_to='assets/videos/Banner_video')),
            ],
        ),
        migrations.CreateModel(
            name='canned_email',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.TextField()),
                ('email_type', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ClientSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Deliverables',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('trash', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Drp_booking_status',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='drp_teamMemberBookingStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Events',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('description', models.CharField(default='', max_length=500)),
                ('date', models.DateField(default='0001-01-01')),
                ('cover_picture', models.FileField(upload_to='assets/images/events_poster')),
                ('is_youtube_video', models.BooleanField()),
                ('video_link', models.FileField(null=True, upload_to='assets/video/events')),
                ('video_youtube_link', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='homepage_media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_id', models.IntegerField()),
                ('table', models.CharField(default='', max_length=50)),
                ('type', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='assets/image_gallery/images')),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package', models.CharField(max_length=50)),
                ('price', models.IntegerField()),
                ('trash', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='payments_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(blank=True, default='0001-01-01', null=True)),
                ('note', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('amount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Pre_Wedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('description', models.CharField(default='', max_length=500)),
                ('date', models.DateField(default='0001-01-01')),
                ('cover_picture', models.FileField(upload_to='assets/images/pre_wedding_poster')),
                ('is_youtube_video', models.BooleanField()),
                ('video_link', models.FileField(blank=True, default='', null=True, upload_to='assets/video/pre_wedding')),
                ('video_youtube_link', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Reels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('description', models.CharField(default='', max_length=50)),
                ('file', models.FileField(upload_to='assets/videos/reels')),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Showcase_images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('file', models.FileField(upload_to='assets/images/showcase_image')),
            ],
        ),
        migrations.CreateModel(
            name='Terms_Conditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=100, null=True)),
                ('trash', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Wedding',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='', max_length=50)),
                ('description', models.CharField(default='', max_length=500)),
                ('date', models.DateField(default='0001-01-01')),
                ('cover_picture', models.FileField(upload_to='assets/images/wedding_poster')),
                ('is_youtube_video', models.BooleanField()),
                ('video_link', models.FileField(null=True, upload_to='assets/video/wedding')),
                ('video_youtube_link', models.TextField(null=True)),
                ('views', models.IntegerField(default=0)),
                ('created_at', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=200, unique=True)),
                ('employee_id', models.CharField(max_length=100, unique=True)),
                ('contact_number', models.CharField(blank=True, default='', max_length=300)),
                ('profile_picture', models.URLField()),
                ('is_admin', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('user_role', models.CharField(blank=True, default='', max_length=300)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='additional_service_bookings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField()),
                ('additional_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.additionalservice')),
            ],
        ),
        migrations.CreateModel(
            name='Booking_ShootDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('event_type', models.CharField(max_length=50)),
                ('additional_service', models.ManyToManyField(to='console.additional_service_bookings')),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_date', models.DateField(auto_now_add=True)),
                ('discount', models.IntegerField(default=0)),
                ('total_price', models.IntegerField(default=0)),
                ('shoot_date', models.ManyToManyField(to='console.booking_shootdate')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=500)),
                ('wedding_date', models.DateField(blank=True, default='0001-01-01', null=True)),
                ('groom_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('groom_Email_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('groom_contact_number', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('groom_date_of_birth', models.DateField(blank=True, default='0001-01-01', null=True)),
                ('bride_name', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('bride_Email_id', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('bride_date_of_birth', models.DateField(blank=True, default='0001-01-01', null=True)),
                ('wedding_venue', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('client_token', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('profile', models.FileField(blank=True, default='assets/images/user/profile-picture/user.png', null=True, upload_to='assets/images/user/profile-picture')),
                ('booking', models.ManyToManyField(to='console.booking')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.clientsource')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='console.client'),
        ),
        migrations.AddField(
            model_name='booking',
            name='booking_status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='console.drp_booking_status'),
        ),
        migrations.CreateModel(
            name='fund_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now=True, null=True)),
                ('note', models.CharField(blank=True, default='', max_length=100, null=True)),
                ('amount', models.IntegerField(default=0)),
                ('booking', models.ForeignKey(blank=True, default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='console.booking')),
            ],
        ),
        migrations.AddField(
            model_name='booking',
            name='package',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.package'),
        ),
        migrations.CreateModel(
            name='Payments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('amount', models.IntegerField()),
                ('payment_mode', models.CharField(blank=True, max_length=20, null=True)),
                ('payment_note', models.CharField(blank=True, max_length=300, null=True)),
                ('booking', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.booking')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.client')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.client')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.payments')),
            ],
        ),
        migrations.AddField(
            model_name='package',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.segment'),
        ),
        migrations.AddField(
            model_name='additionalservice',
            name='segment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.segment'),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(max_length=100)),
                ('trash', models.BooleanField(default=False)),
                ('segment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='console.segment')),
            ],
        ),
        migrations.AddField(
            model_name='package',
            name='service',
            field=models.ManyToManyField(to='console.service'),
        ),
        migrations.CreateModel(
            name='Team_member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('contact_number', models.CharField(max_length=500)),
                ('email_id', models.EmailField(max_length=254)),
                ('trash', models.BooleanField(default=False)),
                ('fund', models.ManyToManyField(to='console.fund_history')),
                ('payments', models.ManyToManyField(to='console.payments_history')),
                ('skills', models.ManyToManyField(to='console.additionalservice')),
            ],
        ),
        migrations.CreateModel(
            name='teamMemberStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.drp_teammemberbookingstatus')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='console.team_member')),
            ],
        ),
        migrations.AddField(
            model_name='additional_service_bookings',
            name='team',
            field=models.ManyToManyField(to='console.teammemberstatus'),
        ),
        migrations.CreateModel(
            name='UserAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
